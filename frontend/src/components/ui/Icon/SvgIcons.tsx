// SVG icons that need to change color on active, hover, etc. states
import './Icon.scss';

interface Props {
  className?: string;
  isBig?: boolean;
}

const NotificationIcon = ({ className }: Props) => {
  return (
    <div className={`${className}`}>
      <svg
        width="13"
        height="15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6.5 0a.932.932 0 0 0-.93.938V1.5c-2.117.434-3.713 2.326-3.713 4.594v.55a5.67 5.67 0 0 1-1.408 3.739l-.215.243a.948.948 0 0 0-.153 1.008.927.927 0 0 0 .847.553h11.143a.93.93 0 0 0 .847-.553.942.942 0 0 0-.154-1.008l-.214-.243a5.664 5.664 0 0 1-1.408-3.738v-.551c0-2.268-1.596-4.16-3.714-4.594V.937A.932.932 0 0 0 6.499 0Zm1.314 14.452c.348-.351.542-.829.542-1.327H4.642c0 .498.195.976.543 1.327a1.849 1.849 0 0 0 2.629 0Z"
          fill="var(--sa-primary-950)"
        />
      </svg>
    </div>
  );
};

const SharingHubIcon = ({ className }: Props) => {
  return (
    <div className={`${className}`}>
      <svg
        width="15"
        height="11"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1.688 1.375c0-.365.138-.714.384-.972S2.652 0 3 0c.348 0 .682.145.928.403s.385.607.385.972-.139.714-.385.972-.58.403-.928.403c-.348 0-.682-.145-.928-.403a1.409 1.409 0 0 1-.385-.972ZM1.5 5.247a1.601 1.601 0 0 0-.375 1.039c0 .397.14.763.375 1.038V5.247Zm3.384-1.21A3.595 3.595 0 0 0 3.75 6.679c0 .842.281 1.615.75 2.222v.528c0 .434-.335.785-.75.785h-1.5c-.415 0-.75-.35-.75-.785V8.77C.614 8.329 0 7.383 0 6.286c0-1.52 1.174-2.75 2.625-2.75h.75c.563 0 1.083.184 1.51.498v.003ZM10.5 9.429V8.9c.469-.607.75-1.38.75-2.222a3.605 3.605 0 0 0-1.134-2.645 2.533 2.533 0 0 1 1.509-.498h.75c1.45 0 2.625 1.23 2.625 2.75 0 1.097-.614 2.043-1.5 2.485v.658c0 .434-.335.785-.75.785h-1.5c-.415 0-.75-.35-.75-.785Zm.188-8.054c0-.365.138-.714.384-.972S11.652 0 12 0c.348 0 .682.145.928.403s.384.607.384.972-.138.714-.384.972-.58.403-.928.403c-.348 0-.682-.145-.928-.403a1.41 1.41 0 0 1-.384-.972ZM13.5 5.247v2.08c.234-.278.375-.641.375-1.039 0-.398-.14-.763-.375-1.038v-.003ZM7.5 0c.398 0 .78.166 1.06.46.282.295.44.695.44 1.111 0 .417-.158.817-.44 1.112-.28.294-.662.46-1.06.46s-.78-.166-1.06-.46A1.61 1.61 0 0 1 6 1.57c0-.416.158-.816.44-1.11A1.46 1.46 0 0 1 7.5 0ZM5.625 6.679c0 .397.14.76.375 1.038V5.64c-.234.277-.375.64-.375 1.039ZM9 5.64v2.08c.234-.278.375-.641.375-1.039 0-.398-.14-.764-.375-1.039V5.64Zm1.5 1.039c0 1.097-.614 2.042-1.5 2.484v1.051c0 .435-.335.786-.75.786h-1.5c-.415 0-.75-.351-.75-.786v-1.05c-.886-.443-1.5-1.388-1.5-2.485 0-1.52 1.174-2.75 2.625-2.75h.75c1.45 0 2.625 1.23 2.625 2.75Z"
          fill="var(--sa-primary-950)"
        />
      </svg>
    </div>
  );
};

const CustomizeIcon = ({ className }: Props) => {
  return (
    <div className={`${className}`}>
      <svg
        width="13"
        height="13"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M13 6.5v.069c-.01.926-.853 1.556-1.78 1.556H8.734a1.22 1.22 0 0 0-1.193 1.47c.053.26.165.508.274.76.155.35.307.697.307 1.066 0 .807-.548 1.54-1.355 1.574A6.499 6.499 0 0 1 0 6.5 6.5 6.5 0 0 1 6.5 0 6.5 6.5 0 0 1 13 6.5Zm-9.75.813a.812.812 0 1 0-1.625 0 .812.812 0 0 0 1.625 0Zm0-2.438a.812.812 0 1 0 0-1.625.812.812 0 0 0 0 1.625Zm4.063-2.438a.812.812 0 1 0-1.625 0 .812.812 0 0 0 1.625 0ZM9.75 4.876a.812.812 0 1 0 0-1.625.812.812 0 0 0 0 1.625Z"
          fill="var(--sa-primary-950)"
        />
      </svg>
    </div>
  );
};

const PlusIcon = ({ className }: Props) => {
  return (
    <div className={`${className}`}>
      <svg
        width="17"
        height="18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M10.23 2.23A1.73 1.73 0 0 0 8.5.5a1.73 1.73 0 0 0-1.73 1.73v5.04H1.73A1.73 1.73 0 0 0 0 9c0 .957.774 1.73 1.73 1.73h5.04v5.04a1.73 1.73 0 1 0 3.462 0v-5.04h5.037A1.73 1.73 0 0 0 17 9a1.73 1.73 0 0 0-1.73-1.73h-5.04V2.23Z"
          fill="var(--sa-primary-400)"
        />
      </svg>
    </div>
  );
};

const LeftIcon = ({ className }: Props) => {
  return (
    <div className={`${className}`}>
      <svg
        width="24"
        height="24"
        viewBox="0 0 14 14"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M13.5 7L0.5 7"
          stroke="var(--sa-primary-400)"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M4 3.5L0.5 7L4 10.5"
          stroke="var(--sa-primary-400)"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
    </div>
  );
};

const RightIcon = ({ className }: Props) => {
  return (
    <div className={`${className}`}>
      <svg
        width="24"
        height="24"
        viewBox="0 0 14 14"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0.5 7L13.5 7"
          stroke="var(--sa-primary-400)"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M10 10.5L13.5 7L10 3.5"
          stroke="var(--sa-primary-400)"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </svg>
    </div>
  );
};

const InspirationIcon = ({ className, isBig }: Props) => {
  return (
    <div className={`${className} ${isBig ? 'big-icon' : 'scale-65'}`}>
      <svg
        width="22"
        height="22"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M19.937.263a1.033 1.033 0 0 1 1.418.039l.343.343c.387.387.404 1.01.039 1.418l-3.687 4.12a.69.69 0 0 0-.176.46v.92a.69.69 0 0 1-.687.688h-.68a.677.677 0 0 0-.51.227L4.327 21.523a1.437 1.437 0 0 1-1.07.477c-.378 0-.743-.15-1.01-.421l-1.83-1.826A1.439 1.439 0 0 1 0 18.743c0-.408.172-.795.477-1.066l4.795-4.288a.684.684 0 0 0 .228-.51v-1.191A.69.69 0 0 1 6.187 11h1.487c.167 0 .33-.064.46-.176L19.937.263Zm-1.375 12.112c.154 0 .288.104.33.25l.637 2.221 2.22.636c.147.043.25.176.25.33a.345.345 0 0 1-.25.332l-2.22.636-.636 2.22a.345.345 0 0 1-.662 0l-.636-2.22-2.221-.636a.345.345 0 0 1-.25-.331c0-.155.103-.288.25-.331l2.221-.636.636-2.221a.345.345 0 0 1 .33-.25ZM3.768 3l.636 2.221 2.221.636c.147.043.25.176.25.331a.345.345 0 0 1-.25.331l-2.22.636-.637 2.221a.345.345 0 0 1-.33.25.345.345 0 0 1-.331-.25L2.47 7.155.249 6.519A.345.345 0 0 1 0 6.189c0-.156.103-.289.25-.332l2.22-.636L3.108 3a.345.345 0 0 1 .33-.25c.155 0 .288.104.331.25Zm5.17-3c.158 0 .296.108.334.263l.292 1.173 1.173.292a.345.345 0 0 1 0 .67l-1.173.293-.292 1.173a.345.345 0 0 1-.67 0L8.31 2.69l-1.173-.293a.345.345 0 0 1 0-.67l1.173-.292.292-1.173a.345.345 0 0 1 .335-.262Z"
          fill="#141C57"
        />
      </svg>
    </div>
  );
};

const GoBackIcon = ({
  className,
  isBig,
  onClick,
}: Props & { onClick?: () => void }) => {
  return (
    <div
      className={`${className} ${isBig ? 'big-icon' : 'scale-65'}`}
      onClick={onClick}
    >
      <svg
        width="34"
        height="18"
        viewBox="0 0 34 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M20.6833 10.2713C19.7722 9.56851 19.7722 8.42711 20.6833 7.72428L30.013 0.52728C30.6836 0.00999591 31.6822 -0.141816 32.5568 0.139317C33.4315 0.42045 34 1.07268 34 1.80362V16.1976C34 16.9229 33.4315 17.5808 32.5568 17.8619C31.6822 18.1431 30.6836 17.9856 30.013 17.474L20.6833 10.277V10.2713Z"
          fill="#141C57"
        />
        <path
          d="M0.683327 10.2713C-0.227776 9.56851 -0.227776 8.42711 0.683327 7.72428L10.013 0.52728C10.6836 0.00999591 11.6822 -0.141816 12.5568 0.139317C13.4315 0.42045 14 1.07268 14 1.80362V16.1976C14 16.9229 13.4315 17.5808 12.5568 17.8619C11.6822 18.1431 10.6836 17.9856 10.013 17.474L0.683327 10.277V10.2713Z"
          fill="#141C57"
        />
      </svg>
    </div>
  );
};

export {
  NotificationIcon,
  SharingHubIcon,
  CustomizeIcon,
  PlusIcon,
  LeftIcon,
  RightIcon,
  InspirationIcon,
  GoBackIcon,
};
